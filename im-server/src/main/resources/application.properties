server.port=8080
im.server.port=8090

im.zk.switch=true
im.zk.root=/route
im.zk.addr=localhost:2181

im.route.logout.url=http://localhost:8880/logout

# 检测多少秒没有收到客户端心跳后服务端关闭连接 心跳间隔可以设置25秒
im.heartbeat.time = 90

spring.redis.host=localhost
spring.redis.port=6379
spring.redis.pool.max-active=100
spring.redis.pool.max-idle=100
spring.redis.pool.max-wait=1000
spring.redis.pool.min-idle=10

spring.datasource.url=jdbc:mysql://localhost:3306/blog?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username= root
spring.datasource.password=root


# 以逗号分隔的地址列表，用于建立与Kafka集群的初始连接(kafka 默认的端口号为9092)
spring.kafka.bootstrap-servers: 127.0.0.1:9092
# 发生错误后，消息重发的次数。
spring.kafka.producer.retries: 0
#当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
spring.kafka.producer.batch-size: 16384
# 设置生产者内存缓冲区的大小。
spring.kafka.producer.buffer-memory: 33554432
# 键的序列化方式
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
# 值的序列化方式
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
# acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
# acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
# acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
spring.kafka.producer.acks: 1
# 在侦听器容器中运行的线程数。
spring.kafka.listener.concurrency: 3
spring.kafka.listener.ack-mode: manual_immediate
